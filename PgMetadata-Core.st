Object subclass: #PgConnection	instanceVariableNames: 'hostname port database user password connection'	classVariableNames: ''	poolDictionaries: ''	category: 'PgMetadata-Core'!!PgConnection commentStamp: 'OlivierAuverlot 6/2/2017 14:30' prior: 0!I'm a connection to the PostgreSQL server.!!PgConnection methodsFor: 'accessing' stamp: 'OlivierAuverlot 6/2/2017 14:15'!user	^ user! !!PgConnection methodsFor: 'accessing' stamp: 'OlivierAuverlot 6/2/2017 14:15'!hostname: anObject	hostname := anObject! !!PgConnection methodsFor: 'accessing' stamp: 'OlivierAuverlot 6/2/2017 14:15'!user: anObject	user := anObject! !!PgConnection methodsFor: 'accessing' stamp: 'OlivierAuverlot 6/2/2017 14:14'!database: anObject	database := anObject! !!PgConnection methodsFor: 'accessing' stamp: 'OlivierAuverlot 6/2/2017 15:19'!connection: anObject	connection := anObject! !!PgConnection methodsFor: 'accessing' stamp: 'OlivierAuverlot 6/2/2017 14:15'!port: anObject	port := anObject! !!PgConnection methodsFor: 'accessing' stamp: 'OlivierAuverlot 6/2/2017 14:15'!hostname	^ hostname! !!PgConnection methodsFor: 'accessing' stamp: 'OlivierAuverlot 6/2/2017 14:15'!password: anObject	password := anObject! !!PgConnection methodsFor: 'accessing' stamp: 'OlivierAuverlot 6/2/2017 14:15'!password	^ password! !!PgConnection methodsFor: 'accessing' stamp: 'OlivierAuverlot 6/2/2017 14:14'!database	^ database! !!PgConnection methodsFor: 'accessing' stamp: 'OlivierAuverlot 6/2/2017 14:15'!port	^ port! !!PgConnection methodsFor: 'accessing' stamp: 'OlivierAuverlot 6/2/2017 15:19'!connection	^ connection! !!PgConnection methodsFor: 'action' stamp: 'OlivierAuverlot 6/2/2017 14:29'!getConnectionString	| string |	string := WriteStream on: String new.	string 		nextPutAll: 'postgresV2://';		nextPutAll: self hostname;		nextPutAll: ':';		nextPutAll: (self port asString);		nextPutAll: '/';		nextPutAll: self database;		nextPutAll: '?user=';		nextPutAll: self user;		nextPutAll: '&password=';		nextPutAll: self password.	^string contents! !!PgConnection methodsFor: 'action' stamp: 'OlivierAuverlot 6/2/2017 15:21'!disconnect	self connection disconnect! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!PgConnection class	instanceVariableNames: ''!!PgConnection class methodsFor: 'initialize' stamp: 'OlivierAuverlot 6/2/2017 15:31'!hostname: aHostname port: aPort database: aDatabaseName user: aUserName password: aPassword	^self new 		hostname: aHostname;		port: aPort;		database: aDatabaseName;		user: aUserName;		password: aPassword;		yourself! !Object subclass: #PgDatabase	instanceVariableNames: 'name parameters connection objects postgresql'	classVariableNames: ''	poolDictionaries: ''	category: 'PgMetadata-Core'!!PgDatabase commentStamp: 'OlivierAuverlot 6/2/2017 14:54' prior: 0!I'm a PostgreSQL database.!!PgDatabase methodsFor: 'accessing' stamp: 'OlivierAuverlot 7/6/2017 10:16'!getViews	^objects select: [ :o | o isSqlView ]! !!PgDatabase methodsFor: 'accessing' stamp: 'OlivierAuverlot 6/23/2017 14:03'!connection	^ connection! !!PgDatabase methodsFor: 'accessing' stamp: 'OlivierAuverlot 6/2/2017 15:43'!parameters	^ parameters! !!PgDatabase methodsFor: 'accessing' stamp: 'OlivierAuverlot 7/6/2017 10:15'!getLanguages	^objects select: [ :o | o isSqlLanguage ]! !!PgDatabase methodsFor: 'accessing' stamp: 'OlivierAuverlot 7/6/2017 10:16'!getTriggers	^objects select: [ :o | o isSqlTrigger ]! !!PgDatabase methodsFor: 'accessing' stamp: 'OlivierAuverlot 6/2/2017 15:03'!name	^ name! !!PgDatabase methodsFor: 'accessing' stamp: 'OlivierAuverlot 7/6/2017 10:15'!getDatatypes	^objects select: [ :o | o isSqlDatatype ]! !!PgDatabase methodsFor: 'accessing' stamp: 'OlivierAuverlot 7/6/2017 10:17'!getMaterializedViews	^objects select: [ :o | o isSqlMaterializedView ]! !!PgDatabase methodsFor: 'accessing' stamp: 'OlivierAuverlot 6/2/2017 15:43'!parameters: anObject	parameters := anObject! !!PgDatabase methodsFor: 'accessing' stamp: 'OlivierAuverlot 7/6/2017 10:15'!getFunctions	^objects select: [ :o | o isSqlFunction ]! !!PgDatabase methodsFor: 'accessing' stamp: 'OlivierAuverlot 7/6/2017 10:14'!getColumns	^objects select: [ :o | o isSqlColumn ]! !!PgDatabase methodsFor: 'accessing' stamp: 'OlivierAuverlot 6/2/2017 14:54'!name: anObject	name := anObject! !!PgDatabase methodsFor: 'accessing' stamp: 'OlivierAuverlot 6/22/2017 15:46'!postgresql: anObject	postgresql := anObject! !!PgDatabase methodsFor: 'accessing' stamp: 'OlivierAuverlot 6/23/2017 14:03'!connection: anObject	connection := anObject! !!PgDatabase methodsFor: 'accessing' stamp: 'OlivierAuverlot 7/6/2017 10:15'!getSchemas	^objects select: [ :o | o isSqlNamespace ]! !!PgDatabase methodsFor: 'accessing' stamp: 'OlivierAuverlot 6/22/2017 14:29'!objects	^ objects! !!PgDatabase methodsFor: 'accessing' stamp: 'OlivierAuverlot 7/6/2017 10:16'!getSequences	^objects select: [ :o | o isSqlSequence ]! !!PgDatabase methodsFor: 'accessing' stamp: 'OlivierAuverlot 6/22/2017 14:29'!objects: anObject	objects := anObject! !!PgDatabase methodsFor: 'accessing' stamp: 'OlivierAuverlot 7/6/2017 10:16'!getTables	^objects select: [ :o | o isSqlTable ]! !!PgDatabase methodsFor: 'accessing' stamp: 'OlivierAuverlot 6/22/2017 15:46'!postgresql	^ postgresql! !!PgDatabase methodsFor: 'search' stamp: 'OlivierAuverlot 6/16/2017 10:55'!schemaReferenceOf: aSchemaOid	^self getSchemas detect: [ :schema | schema oid = aSchemaOid ]! !!PgDatabase methodsFor: 'printing' stamp: 'OlivierAuverlot 6/22/2017 14:04'!printOn: aStream	^aStream 		nextPutAll: self className;		nextPutAll: ' ';		nextPutAll: self name.! !!PgDatabase methodsFor: 'action' stamp: 'OlivierAuverlot 6/16/2017 10:00'!addObject: anObject	objects add: anObject.	^anObject! !!PgDatabase methodsFor: 'action' stamp: 'OlivierAuverlot 6/8/2017 14:13'!extractObjects	PgExtractionProcess into: self with: connection! !!PgDatabase methodsFor: 'action' stamp: 'OlivierAuverlot 6/22/2017 14:55'!addUniqueObject: anObject	^self objects 		detect: [ :object |  object = anObject ] 		ifNone: [ ^self addObject: anObject ]! !!PgDatabase methodsFor: 'action' stamp: 'OlivierAuverlot 6/16/2017 14:29'!addDatatype: aDatatype	^self getDatatypes 		detect: [ :d | d oid = aDatatype oid ] 		ifNone: [ ^self addObject: aDatatype ]! !!PgDatabase methodsFor: 'initialize-release' stamp: 'OlivierAuverlot 6/22/2017 15:52'!initialize	objects := Set new.! !!PgDatabase methodsFor: 'connection' stamp: 'OlivierAuverlot 6/23/2017 14:01'!connect	connection := (GADriver fromConnectionString: (parameters getConnectionString)).	connection connect.	self postgresql: (PgPostgresql about: self).	self extractObjects! !!PgDatabase methodsFor: 'connection' stamp: 'OlivierAuverlot 6/2/2017 15:43'!close	connection close! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!PgDatabase class	instanceVariableNames: ''!!PgDatabase class methodsFor: 'initialize' stamp: 'OlivierAuverlot 6/2/2017 15:40'!name: aName connection: connectionParameters	^ self new		name: aName;		parameters: connectionParameters;		yourself! !!PgDatabase class methodsFor: 'initialize' stamp: 'OlivierAuverlot 6/9/2017 11:03'!name: aName 	^ self new		name: aName;		yourself! !Object subclass: #PgExtractionProcess	instanceVariableNames: 'database connection steps'	classVariableNames: ''	poolDictionaries: ''	category: 'PgMetadata-Core'!!PgExtractionProcess commentStamp: 'OlivierAuverlot 6/8/2017 14:08' prior: 0!I'm the extraction process. I collect all the objects in the database.!!PgExtractionProcess methodsFor: 'action' stamp: 'OlivierAuverlot 6/8/2017 15:23'!extractAll	steps do: [ :extractor | extractor into: (self database) with: (self connection) ]! !!PgExtractionProcess methodsFor: 'initialize-release' stamp: 'OlivierAuverlot 9/14/2017 15:49'!initialize	steps := {	"extract objects"	PgLanguageExtractor.	PgExtensionExtractor.	PgNamespaceExtractor.	PgSequenceExtractor.	PgTableExtractor.	PgViewExtractor.	PgMaterializedViewExtractor.	PgColumnExtractor.	PgFunctionExtractor.	PgTriggerExtractor.	"extract constraints"	PgConstraintExtractor.			"extract references"	PgInheritanceReferencesExtractor.} asOrderedCollection.! !!PgExtractionProcess methodsFor: 'accessing' stamp: 'OlivierAuverlot 6/8/2017 14:14'!connection	^ connection! !!PgExtractionProcess methodsFor: 'accessing' stamp: 'OlivierAuverlot 6/8/2017 14:14'!connection: anObject	connection := anObject! !!PgExtractionProcess methodsFor: 'accessing' stamp: 'OlivierAuverlot 6/8/2017 14:14'!database	^ database! !!PgExtractionProcess methodsFor: 'accessing' stamp: 'OlivierAuverlot 6/8/2017 14:14'!database: anObject	database := anObject! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!PgExtractionProcess class	instanceVariableNames: ''!!PgExtractionProcess class methodsFor: 'initialize' stamp: 'OlivierAuverlot 6/8/2017 14:19'!into: aDatabase with: aConnection	^self new 		database: aDatabase;		connection: aConnection;		extractAll;		yourself ! !Object subclass: #PgMetadata	instanceVariableNames: 'database connection'	classVariableNames: ''	poolDictionaries: ''	category: 'PgMetadata-Core'!!PgMetadata commentStamp: 'OlivierAuverlot 9/15/2017 11:42' prior: 0!I'm the main class of PgStudio.| metadata sqlObjects |metadata := PgMetadata database: 'appsi' connection: (	PgConnection		hostname: 'localhost'		port: 5432		database: 'si'		user: 'silifl'		password: 'cplubd22').sqlObjects := metadata extractMetadata.sqlObjects inspect.!!PgMetadata methodsFor: 'accessing' stamp: 'OlivierAuverlot 9/15/2017 09:40'!database: anObject	database := anObject! !!PgMetadata methodsFor: 'accessing' stamp: 'OlivierAuverlot 6/2/2017 14:32'!connection: anObject	connection := anObject! !!PgMetadata methodsFor: 'accessing' stamp: 'OlivierAuverlot 9/15/2017 09:40'!database	^ database! !!PgMetadata methodsFor: 'accessing' stamp: 'OlivierAuverlot 6/2/2017 14:32'!connection	^ connection! !!PgMetadata methodsFor: 'action' stamp: 'OlivierAuverlot 9/15/2017 09:54'!extractMetadata	| db |	db := PgDatabase name: 'appsi' connection: self connection.	db connect.	db close.	^db objects! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!PgMetadata class	instanceVariableNames: ''!!PgMetadata class methodsFor: 'initialize' stamp: 'OlivierAuverlot 9/15/2017 09:51'!database: aDBName connection: aPgConnection	^self new 		database: aDBName;		connection: aPgConnection;		yourself! !Object subclass: #PgPostgresql	instanceVariableNames: 'database datatypes'	classVariableNames: ''	poolDictionaries: ''	category: 'PgMetadata-Core'!!PgPostgresql commentStamp: 'OlivierAuverlot 6/22/2017 15:48' prior: 0!I contain useful informations about the PostgreSQL server instance.!!PgPostgresql methodsFor: 'action' stamp: 'OlivierAuverlot 7/6/2017 10:13'!extractMetaInformations	"extraction of datatypes"	(self database connection execute: 'SELECT oid,typname,typnamespace FROM pg_type') do: [ :datatype |		self datatypes add: (SqlDatatype oid: ((datatype atName: #oid) asInteger) name: (datatype atName: #typname) owner: self database)	].! !!PgPostgresql methodsFor: 'accessing' stamp: 'OlivierAuverlot 6/23/2017 14:02'!database: anObject	database := anObject! !!PgPostgresql methodsFor: 'accessing' stamp: 'OlivierAuverlot 6/22/2017 15:48'!datatypes: anObject	datatypes := anObject! !!PgPostgresql methodsFor: 'accessing' stamp: 'OlivierAuverlot 6/23/2017 14:02'!database	^ database! !!PgPostgresql methodsFor: 'accessing' stamp: 'OlivierAuverlot 6/22/2017 15:48'!datatypes	^ datatypes! !!PgPostgresql methodsFor: 'initialize-release' stamp: 'OlivierAuverlot 6/23/2017 11:46'!initialize	self datatypes: Set new.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!PgPostgresql class	instanceVariableNames: ''!!PgPostgresql class methodsFor: 'initialize' stamp: 'OlivierAuverlot 6/23/2017 14:02'!about: aPgDatabase	^ self new		database: aPgDatabase;		extractMetaInformations;		yourself! !Object subclass: #SqlEntity	instanceVariableNames: 'owner'	classVariableNames: ''	poolDictionaries: ''	category: 'PgMetadata-Core'!!SqlEntity commentStamp: 'OlivierAuverlot 7/6/2017 10:59' prior: 0!I'm a SQL entity (an object or a reference).!!SqlEntity methodsFor: 'identity' stamp: 'OlivierAuverlot 7/6/2017 11:05'!isSqlFunction	^false! !!SqlEntity methodsFor: 'identity' stamp: 'OlivierAuverlot 7/6/2017 11:05'!isSqlMaterializedView	^false! !!SqlEntity methodsFor: 'identity' stamp: 'OlivierAuverlot 7/6/2017 11:05'!isSqlTable	^false! !!SqlEntity methodsFor: 'identity' stamp: 'OlivierAuverlot 7/6/2017 11:05'!isSqlNamespace	^false! !!SqlEntity methodsFor: 'identity' stamp: 'OlivierAuverlot 7/6/2017 11:05'!isSqlView	^false! !!SqlEntity methodsFor: 'identity' stamp: 'OlivierAuverlot 7/6/2017 11:05'!isSqlTrigger	^false! !!SqlEntity methodsFor: 'identity' stamp: 'OlivierAuverlot 7/6/2017 11:05'!isSqlObjectInSchema	^true! !!SqlEntity methodsFor: 'identity' stamp: 'OlivierAuverlot 7/6/2017 11:04'!isSqlColumn	^false! !!SqlEntity methodsFor: 'identity' stamp: 'OlivierAuverlot 7/6/2017 11:04'!isSqlDatatype	^false! !!SqlEntity methodsFor: 'identity' stamp: 'OlivierAuverlot 7/6/2017 11:05'!isSqlExtension	^false! !!SqlEntity methodsFor: 'identity' stamp: 'OlivierAuverlot 7/6/2017 11:05'!isSqlLanguage	^false! !!SqlEntity methodsFor: 'identity' stamp: 'OlivierAuverlot 7/6/2017 11:08'!isSqlInheritanceReference	^false! !!SqlEntity methodsFor: 'identity' stamp: 'OlivierAuverlot 7/6/2017 11:04'!isSqlArgument	^false! !!SqlEntity methodsFor: 'identity' stamp: 'OlivierAuverlot 7/6/2017 11:05'!isSqlSequence	^false! !!SqlEntity methodsFor: 'identity' stamp: 'OlivierAuverlot 7/6/2017 11:08'!isSqlReference	^false! !!SqlEntity methodsFor: 'identity' stamp: 'OlivierAuverlot 7/6/2017 11:05'!isSqlTriggerFunction	^false! !!SqlEntity methodsFor: 'identity' stamp: 'OlivierAuverlot 7/6/2017 11:08'!isSqlObject	^false! !!SqlEntity methodsFor: 'accessing' stamp: 'OlivierAuverlot 7/6/2017 10:58'!owner: anObject	owner := anObject! !!SqlEntity methodsFor: 'accessing' stamp: 'OlivierAuverlot 7/6/2017 10:58'!owner	^ owner! !